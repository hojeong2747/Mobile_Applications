// Generated by view binder compiler. Do not edit!
package work2.mobile.week03.roomhw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import work2.mobile.week03.roomhw.R;

public final class ActivityInsertBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnNewContactClose;

  @NonNull
  public final Button btnNewContactSave;

  @NonNull
  public final EditText editText1;

  @NonNull
  public final EditText editText2;

  @NonNull
  public final EditText editText3;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  private ActivityInsertBinding(@NonNull LinearLayout rootView, @NonNull Button btnNewContactClose,
      @NonNull Button btnNewContactSave, @NonNull EditText editText1, @NonNull EditText editText2,
      @NonNull EditText editText3, @NonNull TextView textView1, @NonNull TextView textView2,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.btnNewContactClose = btnNewContactClose;
    this.btnNewContactSave = btnNewContactSave;
    this.editText1 = editText1;
    this.editText2 = editText2;
    this.editText3 = editText3;
    this.textView1 = textView1;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInsertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInsertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_insert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInsertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNewContactClose;
      Button btnNewContactClose = ViewBindings.findChildViewById(rootView, id);
      if (btnNewContactClose == null) {
        break missingId;
      }

      id = R.id.btnNewContactSave;
      Button btnNewContactSave = ViewBindings.findChildViewById(rootView, id);
      if (btnNewContactSave == null) {
        break missingId;
      }

      id = R.id.editText1;
      EditText editText1 = ViewBindings.findChildViewById(rootView, id);
      if (editText1 == null) {
        break missingId;
      }

      id = R.id.editText2;
      EditText editText2 = ViewBindings.findChildViewById(rootView, id);
      if (editText2 == null) {
        break missingId;
      }

      id = R.id.editText3;
      EditText editText3 = ViewBindings.findChildViewById(rootView, id);
      if (editText3 == null) {
        break missingId;
      }

      id = R.id.textView1;
      TextView textView1 = ViewBindings.findChildViewById(rootView, id);
      if (textView1 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityInsertBinding((LinearLayout) rootView, btnNewContactClose,
          btnNewContactSave, editText1, editText2, editText3, textView1, textView2, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
